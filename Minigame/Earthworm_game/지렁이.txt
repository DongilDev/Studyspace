-- 지렁이 게임 --
 
1. 게임에 필요한 것은 무엇인가?

@@네모난 구역 구현하기 (벽 만들기) 
@@음식 랜덤 생성 (먹을때마다 랜덤 생성) (뱀이 위치한 곳은 제외)
@@음식을 먹으면 길이가 늘어남 
@@음식을 먹으면 속도 증가 
@@방향키(wasd)로 방향 조절 가능 
@@뱀의 머리가 벽에 부딪치거나 자슨의 몸통에 부딪치면 게임 종료

2. 어떤 논리가 필요한가?

@@wasd 키를 눌렀을때 지렁이가 움직여야함 
@@지렁이가 벽에 닿으면 게임오버
@@음식 랜덤 생성
@@지렁이가 음식에 닿으면 꼬리 증가 
@@지렁이가 1칸 움직이면 기존에 있던 머리좌표에 바로 뒤 꼬리가 이동해야함
@@지렁이가 음식에 닿으면 지렁이 속도 증가

3. 해당 논리에 대해 어떤 변수를 가져와야 하는가?

MAP_WIDTH // 맵 가로 길이 (상수 선언)
MAP_HEIGHT // 맵 세로 길이 (상수 선언)

x, y // 지렁이 좌표
food_x, food_y // 음식 변수
score // 음식 먹으면 얻는 점수
speed_lv // 음식 먹으면 스피드 레벨 증가 
tail_x[100]. tail_y[100] // 꼬리 좌표 저장 배열 (지렁이가 움직이면서 이전 좌표들을 저장해야 하기때문)
tail_num // 음식 먹을때마다 꼬리 개수 증가 
gameover // bool형 으로 선언해서 죽으면 while 문 탈출하면서 게임 끝 
오후 9:11 2022-12-19

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
질문 1. 상수 선언은 define ? const ? enum ?

define (define x 3)

전처리기로 인해 치환시킨다. 그로 인해서 기호 테이블에 x 가없는 것이고 컴파일 중에 
x 값에 관련하여 에러가 발생하면 컴파일러는 x 가 아니라 3 이라는 값에 대해
에러메시지를 뿜게 됨 그렇게 되면 x 뿐만 아니라 다른 매크로 상수도 3 으로 
정의되어 있다면 디버깅 작업이 굉장히 어려워 짐 

const (const int x = 3;)

위 매크로 상수의 문제점은 해결이 된다.
다만 int 만큼의 공간을 차지하면서 메모리 낭비가 된다.

enum (enum { X = 3 } ) 

define, const 문제 모두 해결이 된다. 
X 가 무엇인지 알려주는 매직 넘버 역할을 하기 때문에 메모리에 할당되지 않는다.
따라서 메모리 낭비도 없고 컴피알 타임에 존재하기 때문에 컴파일 에러 시
추적도 가능하다.

단점으로는 정수형만 가능하기 때문에 X = 3.14 같은 상수의 선언은 불가능하다.
